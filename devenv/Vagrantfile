require_relative '../lib/comander/cli/constants.rb'

VAGRANTFILE_API_VERSION = '2'.freeze
INFRASTRUCTURE_REPO = '/home/infrastructure'.freeze
HYPERVISOR = /linux/ =~ RUBY_PLATFORM ? :lxc : :virtualbox
DEVENV_ROOT = File.expand_path(__dir__ + '/../cache/repos/')
ANSIBLE_DIR = File.expand_path(__dir__ + '/../ansible/')
SCRIPTS_DIR = './scripts'

subenvironment = 'devenv'
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.synced_folder '../', INFRASTRUCTURE_REPO, create: true
  config.vm.synced_folder ENV['HOME'], '/home/me', create: true

  config.ssh.forward_agent = true
  if HYPERVISOR == :virtualbox
    config.vm.define 'develop' do |vm_config|
      vm_config.vm.box = 'boxesio/xenial64-standard'
      vm_config.vm.network :private_network, ip: Comander::CLI::DEVENV_IP
      vm_config.vm.provider 'virtualbox' do |v|
        v.memory = 3000
        v.cpus = 2
      end
    end
  else
    config.vm.define 'develop' do |node|
      node.vm.box = 'magec/xenial64-lxc'
      node.vm.provider :lxc do |lxc, _override_node_config|
        lxc.container_name = 'reciperi-development'
        # This way of configure a container is valid in LXC > 3
        # In previou version it was something like: `lxc.customize 'network.ipv4', 'IP_HERE'`
        lxc.customize 'net.0.ipv4.address', '10.0.3.5/24'
        lxc.customize 'net.0.ipv4.gateway', '10.0.3.1'
      end
    end
  end

  # Missing box packages
  config.vm.provision(
    'get_missing_packages_in_box',
    type: 'shell',
    path: "#{SCRIPTS_DIR}/missing_packages.sh",
    privileged: false
  )

  # Fetch repos
  config.vm.provision(
    'fetch_repos',
    type: 'shell',
    path: "#{SCRIPTS_DIR}/repos.sh",
    privileged: false
  )

  config.vm.provision 'bootstrap', type: 'ansible' do |ansible|
    ansible.playbook = "#{ANSIBLE_DIR}/puppet.yml"
    ansible.config_file = "#{ANSIBLE_DIR}/ansible.cfg"
    ansible.compatibility_mode = '2.0'
    ansible.extra_vars = {
      set_hostname: 'develop',
      set_domain: 'dev.reciperi.com',
      set_environment: 'development',
      set_subenvironment: 'devenv',
      infrastructure_path: INFRASTRUCTURE_REPO
    }
  end
  config.vm.provision(
    'puppet',
    type: 'shell',
    inline: "cd #{INFRASTRUCTURE_REPO}/puppet; FACTER_SUBENVIRONMENT=#{subenvironment} puppet apply environments/devenv/manifests/servers.pp --confdir . --environment=development --show_diff"
  )
end
